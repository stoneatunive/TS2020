# Remove all objects stored in the workspace
#rm(list=ls())
# Load the package Ecdat
require(Ecdat)
data(incomeUK)
data(IncomeUK)
IncomeUK
plot(IncomeUK)
?IncomeUK
head(IncomeUK)
plot(IncomeUK[,1])
tsdisplay(IncomeUK[,1])
# Tue Feb 11 21:50:43 2020 ------------------------------
acf(IncomeUK[,1])
acf(diff(IncomeUK[,1])
)
library(forecast)
auto.arima(IncomeUK[,1], ic='bic', test='adf', stepwise = FALSE, max.p = 10, max.q = 10, max.P = 3, max.Q = 3)
m0=auto.arima(IncomeUK[,1], ic='bic', test='adf', stepwise = FALSE, max.p = 10, max.q = 10, max.P = 3, max.Q = 3)
tsdiag(m0)
m0=auto.arima(log(IncomeUK[,1]), ic='bic', test='adf', stepwise = FALSE, max.p = 10, max.q = 10, max.P = 3, max.Q = 3)
m0
plot(log(Income[,1]))
plot(log(IncomeUK[,1]))
?auto.arima
m0=auto.arima(log(IncomeUK[,1]), ic='bic', test='adf', stepwise = FALSE, max.p = 10, max.q = 10, max.P = 3, max.Q = 3, seasonal.test='hegy')
tsdiag(m0)
m0
m0=auto.arima(log(IncomeUK[,1]), ic='bic', test='adf', stepwise = FALSE, max.p = 10, max.q = 10, max.P = 3, max.Q = 3, seasonal=TRUE)
m0
m0=auto.arima(log(IncomeUK[,1]), ic='bic', test='adf', stepwise = FALSE, max.p = 10, max.q = 10, max.P = 3, max.Q = 3, seasonal.test='hegy')
m0
linc=log(IncomeUK[,1])
m0=auto.arima(linc, ic='bic', test='adf', stepwise = FALSE, max.p = 10, max.q = 10, max.P = 3, max.Q = 3, seasonal.test='hegy')
m0
tsdiag(m0)
# Remove all objects stored in the workspace
rm(list=ls())
# Load the package Ecdat
require(Ecdat)
data(IncomeUK)
lcons = log(IncomeUK[,2])
# (a) plot the three time series
plot(lcons)
# Remove all objects stored in the workspace
rm(list=ls())
# Load the package Ecdat
require(Ecdat)
data(IncomeUK)
lcons = log(IncomeUK[,2])
# (a) plot the three time series
plot(lcons)
# (b) plot the estimated ACF's and PACF's
opar=par(mfrow=c(3,2))
acf(lcons,
ylab="ACF",
main="Consumption"
pacf(lcons,
ylab="PACF",
main="consumption"
}
# Remove all objects stored in the workspace
rm(list=ls())
# Load the package Ecdat
require(Ecdat)
data(IncomeUK)
lcons = log(IncomeUK[,2])
# (a) plot the three time series
plot(lcons)
# (b) plot the estimated ACF's and PACF's
opar=par(mfrow=c(3,2))
acf(lcons,
ylab="ACF",
main="Consumption"
pacf(lcons,
ylab="PACF",
main="consumption"
# Remove all objects stored in the workspace
rm(list=ls())
# Load the package Ecdat
require(Ecdat)
data(IncomeUK)
lcons = log(IncomeUK[,2])
# (a) plot the three time series
plot(lcons)
# (b) plot the estimated ACF's and PACF's
acf(lcons,
ylab="ACF",
main="Consumption"
pacf(lcons,
ylab="PACF",
main="consumption"
graphics.off()
# Remove all objects stored in the workspace
rm(list=ls())
# Load the package Ecdat
require(Ecdat)
data(IncomeUK)
lcons = log(IncomeUK[,2])
# (a) plot the three time series
plot(lcons)
# (b) plot the estimated ACF's and PACF's
acf(lcons,
ylab="ACF",
main="Consumption"
pacf(lcons,
ylab="PACF",
main="consumption"
# Remove all objects stored in the workspace
rm(list=ls())
# Load the package Ecdat
require(Ecdat)
data(IncomeUK)
lcons = log(IncomeUK[,2])
# (a) plot the three time series
plot(lcons)
# (b) plot the estimated ACF's and PACF's
acf(lcons,
ylab="ACF",
main="Consumption")
pacf(lcons,
ylab="PACF",
main="consumption")
require(urca)
source('/media/mydata/dati/didattica/corsonuovo/corso2020/slides2020/git-ex/08-incomeUK.R')
source('/media/mydata/dati/didattica/corsonuovo/corso2020/slides2020/git-ex/08-incomeUK.R')
source('/media/mydata/dati/didattica/corsonuovo/corso2020/slides2020/git-ex/08-incomeUK.R')
# (f)
tsdiag(fit1)
source('/media/mydata/dati/didattica/corsonuovo/corso2020/slides2020/git-ex/08-incomeUK.R')
rm(list=ls())
data("Airline")
plot(Airline)
rm(Airline)
data("AirPassengers")
plot(AirPassengers)
?diff
source('~/.active-rstudio-document')
source('/media/mydata/dati/didattica/corsonuovo/corso2020/slides2020/git-ex/airpassengers.R')
source('/media/mydata/dati/didattica/corsonuovo/corso2020/slides2020/git-ex/airpassengers.R')
source('/media/mydata/dati/didattica/corsonuovo/corso2020/slides2020/git-ex/airpassengers.R')
source('/media/mydata/dati/didattica/corsonuovo/corso2020/slides2020/git-ex/airpassengers.R')
source('/media/mydata/dati/didattica/corsonuovo/corso2020/slides2020/git-ex/airpassengers.R')
source('/media/mydata/dati/didattica/corsonuovo/corso2020/slides2020/git-ex/airpassengers.R')
source('/media/mydata/dati/didattica/corsonuovo/corso2020/slides2020/git-ex/airpassengers.R')
source('/media/mydata/dati/didattica/corsonuovo/corso2020/slides2020/git-ex/airpassengers.R')
source('/media/mydata/dati/didattica/corsonuovo/corso2020/slides2020/git-ex/airpassengers.R')
source('/media/mydata/dati/didattica/corsonuovo/corso2020/slides2020/git-ex/airpassengers.R')
fit0
source('/media/mydata/dati/didattica/corsonuovo/corso2020/slides2020/git-ex/airpassengers.R')
fit0
source('/media/mydata/dati/didattica/corsonuovo/corso2020/slides2020/git-ex/airpassengers.R')
fit0
source('/media/mydata/dati/didattica/corsonuovo/corso2020/slides2020/git-ex/airpassengers.R')
fit0
source('/media/mydata/dati/didattica/corsonuovo/corso2020/slides2020/git-ex/airpassengers.R')
source('/media/mydata/dati/didattica/corsonuovo/corso2020/slides2020/git-ex/airpassengers.R')
source('/media/mydata/dati/didattica/corsonuovo/corso2020/slides2020/git-ex/airpassengers.R')
source('/media/mydata/dati/didattica/corsonuovo/corso2020/slides2020/git-ex/airpassengers.R')
fit0
source('/media/mydata/dati/didattica/corsonuovo/corso2020/slides2020/git-ex/airpassengers.R')
source('/media/mydata/dati/didattica/corsonuovo/corso2020/slides2020/git-ex/airpassengers.R')
fit0
tsdiag(fit0)
length(AirPassengers)
?arima
source('/media/mydata/dati/didattica/corsonuovo/corso2020/slides2020/git-ex/airpassengers.R')
fit1 = arima(lair, order=c(0,1,1), seasonal=list(order=c(0,1,1), period=12))
fit1
fit0
BIC(fit1)
source('/media/mydata/dati/didattica/corsonuovo/corso2020/slides2020/git-ex/airpassengers.R')
fit0
fit1
source('/media/mydata/dati/didattica/corsonuovo/corso2020/slides2020/git-ex/airpassengers.R')
source('/media/mydata/dati/didattica/corsonuovo/corso2020/slides2020/git-ex/airpassengers.R')
fit0
fit1
plot(forecast(fit0, h=12))
plot(forecast(fit1, h=12))
source('/media/mydata/dati/didattica/corsonuovo/corso2020/slides2020/git-ex/airpassengers.R')
